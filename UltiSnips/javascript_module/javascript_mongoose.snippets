snippet mongo ""
import Mongoose from 'mongoose-improve';

class ${1} extends Mongoose {
  constructor(url, name, schema) {
    super(url, name, schema);
  }
}
export default $1;
endsnippet

snippet model ""
import ${1} from '../classes/$1.js';
import ${2}Schema from '../schemas/$2.js';

const {
  MONGO_$2_URL,
  MONGO_$2_NAME,
} = process.env;
export default new $1(
  MONGO_$2_URL,
  MONGO_$2_NAME,
  $2Schema,
);
endsnippet

snippet schema ""
import { Schema } from 'mongoose';

const schema = new Schema({
  ${1:${VISUAL}}
}, {
  versionKey: 0,
});

schema.index({
  // _id: 1,
}, {
  // unique: true,
});
export default schema;
endsnippet

snippet look ""
{
  $lookup: {
    from: '${1}',
    localField: '${2}',
    foreignField: '${3}',
    as: '${4}',
  },
},
endsnippet

snippet unwind ""
{
  $unwind: {
    path: '${1}',
    preserveNullAndEmptyArrays: true,
  },
},
endsnippet

snippet project ""
{
  $project: {
    ${1},
  },
},
endsnippet

snippet addFields ""
{
  $addFields: {
    ${1},
  },
},
endsnippet

snippet group ""
{
  $group: {
    ${1},
  },
},
endsnippet

snippet op ""
{
  \$${1}: [
    ${2},
  ],
},
endsnippet
